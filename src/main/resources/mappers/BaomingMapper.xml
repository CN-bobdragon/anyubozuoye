<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.BaomingMapper" >
  <resultMap id="BaseResultMap" type="com.entity.Baoming" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="huodongid" property="huodongid" jdbcType="INTEGER" />
<result column="nerong" property="nerong" jdbcType="VARCHAR" />
<result column="shijian" property="shijian" jdbcType="VARCHAR" />
<result column="usersid" property="usersid" jdbcType="INTEGER" />

  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id,  huodongid, nerong, shijian, usersid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.entity.BaomingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from baoming
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from baoming
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from baoming
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.entity.BaomingExample" >
    delete from baoming
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.entity.Baoming" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into baoming (huodongid,nerong,shijian,usersid)
    values (#{huodongid,jdbcType=INTEGER},#{nerong,jdbcType=VARCHAR},#{shijian,jdbcType=VARCHAR},#{usersid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.entity.Baoming" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into baoming
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="huodongid != null" >
    huodongid,
</if>
<if test="nerong != null" >
    nerong,
</if>
<if test="shijian != null" >
    shijian,
</if>
<if test="usersid != null" >
    usersid,
</if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="huodongid != null" >
    #{huodongid,jdbcType=INTEGER},
</if>
<if test="nerong != null" >
    #{nerong,jdbcType=VARCHAR},
</if>
<if test="shijian != null" >
    #{shijian,jdbcType=VARCHAR},
</if>
<if test="usersid != null" >
    #{usersid,jdbcType=INTEGER},
</if>

    </trim>
  </insert>
  <select id="countByExample" parameterType="com.entity.BaomingExample" resultType="java.lang.Integer" >
    select count(*) from baoming
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update baoming
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.huodongid != null" >
    huodongid = #{record.huodongid,jdbcType=INTEGER},
</if>
<if test="record.nerong != null" >
    nerong = #{record.nerong,jdbcType=VARCHAR},
</if>
<if test="record.shijian != null" >
    shijian = #{record.shijian,jdbcType=VARCHAR},
</if>
<if test="record.usersid != null" >
    usersid = #{record.usersid,jdbcType=INTEGER},
</if>

    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update baoming
    set id = #{record.id,jdbcType=INTEGER},
      huodongid = #{record.huodongid,jdbcType=INTEGER},nerong = #{record.nerong,jdbcType=VARCHAR},shijian = #{record.shijian,jdbcType=VARCHAR},usersid = #{record.usersid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.entity.Baoming" >
    update baoming
    <set >
      <if test="huodongid != null" >
    huodongid = #{huodongid,jdbcType=INTEGER},
</if>
<if test="nerong != null" >
    nerong = #{nerong,jdbcType=VARCHAR},
</if>
<if test="shijian != null" >
    shijian = #{shijian,jdbcType=VARCHAR},
</if>
<if test="usersid != null" >
    usersid = #{usersid,jdbcType=INTEGER},
</if>

    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.entity.Baoming" >
    update baoming
    set huodongid = #{huodongid,jdbcType=INTEGER},nerong = #{nerong,jdbcType=VARCHAR},shijian = #{shijian,jdbcType=VARCHAR},usersid = #{usersid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectCountGroup" resultType="map">
    select ${column} category, count(1) total from baoming group by category
  </select>
  <select id="selectSumGroup" resultType="map">
    select ${xColumn} category, sum(${yColumn}) total from baoming group by category
  </select>
  <select id="selectCountGroupByDate" resultType="map">
    <if test = 'dateType == "dd"'>
      select  DATE_FORMAT(${column},'%Y-%m-%d') category, count(1) total from baoming group by category
    </if>
    <if test = 'dateType == "mm"'>
      select  DATE_FORMAT(${column},'%Y-%m') category, count(1) total from baoming group by category
    </if>
    <if test = 'dateType == "yy"'>
      select  DATE_FORMAT(${column},'%Y') category, count(1) total from baoming group by category
    </if>

  </select>
  <select id="selectSumGroupByDate" resultType="map">
    <if test = 'dateType == "dd"'>
      select  DATE_FORMAT(${xColumn},'%Y-%m-%d') category, sum(${yColumn}) total from baoming group by category
    </if>
    <if test = 'dateType == "mm"'>
      select  DATE_FORMAT(${xColumn},'%Y-%m') category, sum(${yColumn}) total from baoming group by category
    </if>
    <if test = 'dateType == "yy"'>
      select  DATE_FORMAT(${xColumn},'%Y') category, sum(${yColumn}) total from baoming group by category
    </if>
  </select>
  <select id="selectCountGroupByFatherId" resultType="map">
    select b.${fatherTableColumn} category, count(1) total from baoming a left join ${fatherTableName} b on a.${fatherTableId} = b.id group by category
  </select>
  <select id="selectSumGroupByFatherId" resultType="map">
    select b.${fatherTableColumn} category, sum(a.${column}) total from baoming a left join ${fatherTableName} b on a.${fatherTableId} = b.id group by category
  </select>
</mapper>
